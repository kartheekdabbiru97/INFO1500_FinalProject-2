/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.AdministrativeCampRole;

import java.util.Date;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Role.AdminRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import static java.lang.String.format;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ashishroy
 */
public class ViewCampRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private WorkRequest request;
    private Enterprise enterprise;
    private Network network;

    /**
     * Creates new form ViewCampRequestJPanel
     */
    public ViewCampRequestJPanel(JPanel userProcessContainer, UserAccount account, EcoSystem business, WorkRequest request, Network network, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.request = request;
        this.enterprise = enterprise;
        this.network = network;
        //System.out.println(business.getNetworkList());
        txtCampID.setText(Integer.toString(request.getCampId()));
        txtCity.setText(request.getCity());
        txtName.setText(request.getVolunteerName());
        txtNumberPeopleAffected.setText(request.getPeopleAffected());
        txtAffectedChildren.setText(request.getPercentChild());
        txtAffectedChildren.setText(request.getPercentElder());
        txtState.setText(request.getState());
        txtStreetAddress.setText(request.getStreet());
        txtZipCode.setText(request.getZipcode());
        if (request.getEventDate() != null) {
            //      SimpleDateFormat format = new SimpleDateFormat("MM-dd-yyyy");
            //      String dateConvert = format.format(request.getEventDate());
            healthcampDate.setDate(request.getEventDate());
        }
        populateEnterpriseComboBox(Enterprise.EnterpriseType.Hospital, network);

        if (request.getStatus().equals("Completed")) {
            bttnApprove.setEnabled(false);
        }

    }

    private void populateEnterpriseComboBox(Enterprise.EnterpriseType type, Network network) {
        cmboEnterprise.removeAllItems();

        for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
            if (type.getValue().equals(enterprise.getEnterpriseType().getValue())) {
                cmboEnterprise.addItem(enterprise);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmboEnterprise = new rojerusan.RSComboMetro();
        bttnBack = new rojerusan.RSMaterialButtonRectangle();
        bttnApprove = new rojerusan.RSMaterialButtonRectangle();
        txtCampID = new rojerusan.RSMetroTextPlaceHolder();
        txtName = new rojerusan.RSMetroTextPlaceHolder();
        txtStreetAddress = new rojerusan.RSMetroTextPlaceHolder();
        txtCity = new rojerusan.RSMetroTextPlaceHolder();
        txtState = new rojerusan.RSMetroTextPlaceHolder();
        txtZipCode = new rojerusan.RSMetroTextPlaceHolder();
        txtNumberPeopleAffected = new rojerusan.RSMetroTextPlaceHolder();
        txtAffectedChildren = new rojerusan.RSMetroTextPlaceHolder();
        txtAddectedElders = new rojerusan.RSMetroTextPlaceHolder();
        healthcampDate = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(232, 243, 255));

        jPanel1.setBackground(new java.awt.Color(15, 19, 52));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("CAMP REQUEST MANAGEMENT");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel8)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("State");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("ZipCode");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("No. of People in Camp");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Percentage of Children");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Percentage of Elders");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Camp ID");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Health Camp Event Date");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Enterprise");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Street Address");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("City");

        cmboEnterprise.setBackground(new java.awt.Color(15, 19, 52));
        cmboEnterprise.setColorArrow(new java.awt.Color(15, 19, 52));
        cmboEnterprise.setColorBorde(new java.awt.Color(15, 19, 52));
        cmboEnterprise.setColorFondo(new java.awt.Color(15, 19, 52));

        bttnBack.setBackground(new java.awt.Color(15, 19, 52));
        bttnBack.setText("Back");
        bttnBack.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        bttnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnBackActionPerformed(evt);
            }
        });

        bttnApprove.setBackground(new java.awt.Color(15, 19, 52));
        bttnApprove.setText("APPROVE");
        bttnApprove.setFont(new java.awt.Font("Roboto Medium", 0, 18)); // NOI18N
        bttnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnApproveActionPerformed(evt);
            }
        });

        txtCampID.setForeground(new java.awt.Color(15, 19, 52));
        txtCampID.setToolTipText("");
        txtCampID.setBorderColor(new java.awt.Color(15, 19, 52));
        txtCampID.setBotonColor(new java.awt.Color(15, 19, 52));
        txtCampID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCampIDActionPerformed(evt);
            }
        });

        txtName.setForeground(new java.awt.Color(15, 19, 52));
        txtName.setToolTipText("");
        txtName.setBorderColor(new java.awt.Color(15, 19, 52));
        txtName.setBotonColor(new java.awt.Color(15, 19, 52));
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtStreetAddress.setForeground(new java.awt.Color(15, 19, 52));
        txtStreetAddress.setToolTipText("");
        txtStreetAddress.setBorderColor(new java.awt.Color(15, 19, 52));
        txtStreetAddress.setBotonColor(new java.awt.Color(15, 19, 52));
        txtStreetAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStreetAddressActionPerformed(evt);
            }
        });

        txtCity.setForeground(new java.awt.Color(15, 19, 52));
        txtCity.setToolTipText("");
        txtCity.setBorderColor(new java.awt.Color(15, 19, 52));
        txtCity.setBotonColor(new java.awt.Color(15, 19, 52));
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        txtState.setForeground(new java.awt.Color(15, 19, 52));
        txtState.setToolTipText("");
        txtState.setBorderColor(new java.awt.Color(15, 19, 52));
        txtState.setBotonColor(new java.awt.Color(15, 19, 52));
        txtState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStateActionPerformed(evt);
            }
        });

        txtZipCode.setForeground(new java.awt.Color(15, 19, 52));
        txtZipCode.setToolTipText("");
        txtZipCode.setBorderColor(new java.awt.Color(15, 19, 52));
        txtZipCode.setBotonColor(new java.awt.Color(15, 19, 52));
        txtZipCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtZipCodeActionPerformed(evt);
            }
        });

        txtNumberPeopleAffected.setForeground(new java.awt.Color(15, 19, 52));
        txtNumberPeopleAffected.setToolTipText("");
        txtNumberPeopleAffected.setBorderColor(new java.awt.Color(15, 19, 52));
        txtNumberPeopleAffected.setBotonColor(new java.awt.Color(15, 19, 52));
        txtNumberPeopleAffected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumberPeopleAffectedActionPerformed(evt);
            }
        });

        txtAffectedChildren.setForeground(new java.awt.Color(15, 19, 52));
        txtAffectedChildren.setToolTipText("");
        txtAffectedChildren.setBorderColor(new java.awt.Color(15, 19, 52));
        txtAffectedChildren.setBotonColor(new java.awt.Color(15, 19, 52));
        txtAffectedChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAffectedChildrenActionPerformed(evt);
            }
        });

        txtAddectedElders.setForeground(new java.awt.Color(15, 19, 52));
        txtAddectedElders.setToolTipText("");
        txtAddectedElders.setBorderColor(new java.awt.Color(15, 19, 52));
        txtAddectedElders.setBotonColor(new java.awt.Color(15, 19, 52));
        txtAddectedElders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddectedEldersActionPerformed(evt);
            }
        });

        healthcampDate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel4)
                    .addComponent(bttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttnApprove, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtCampID, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtStreetAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtState, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtNumberPeopleAffected, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtAffectedChildren, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(txtAddectedElders, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(cmboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(healthcampDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(480, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCampID, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtStreetAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtNumberPeopleAffected, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtAffectedChildren, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtAddectedElders, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(healthcampDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttnApprove, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bttnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        HealthcampRequestJPanel health = (HealthcampRequestJPanel) component;
        health.populateTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_bttnBackActionPerformed

    private void bttnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnApproveActionPerformed
        int check = 0;
        int checkdate = 0;
        Enterprise enterprise = null;

        if (healthcampDate.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Event Date cannot be empty!");
        } else {
            check = 1;
            //System.out.println(business.getNetworkList());
            // enterprise = new CampEnterprise(Integer.toString(request.getCampId()));
            int campId1 = request.getCampId();
            String city1 = request.getCity();

            String noOfPeople1 = request.getPeopleAffected();
            String percentChild1 = request.getPercentChild();
            String percentElder1 = request.getPercentElder();
            String state1 = request.getState();
            String street1 = request.getStreet();
            String zipCode1 = request.getZipcode();
            String name1 = request.getCampId() + "_" + request.getZipcode();
            String enter = enterpriseJComboBox.getSelectedItem().toString();

//            Date eventDay = null;
            Date sysDate = null;
//            SimpleDateFormat format = new SimpleDateFormat("MM-dd-yyyy");
//            format.setLenient(false);

            try {

                //  eventDay = format.parse(eventDate.getDate());
                sysDate = new Date();
                long diff = sysDate.getTime() - healthcampDate.getDate().getTime();
                long diff1 = healthcampDate.getDate().getTime() - sysDate.getTime();
                long diff1Days = diff1 / (24 * 60 * 60 * 1000);
                long years = diff1Days / 365;

                if (diff > 0) {
                    JOptionPane.showMessageDialog(null, "Cannot enter a previous date");
                    checkdate = 1;
                }

                if (diff1Days >= 10 && check == 1 && checkdate == 0) {

                    enterprise = network.getEnterpriseDirectory().createAndAddCampEnterprise(name1, street1, city1, state1, zipCode1, noOfPeople1, percentChild1, percentElder1, campId1, healthcampDate.getDate(), Enterprise.EnterpriseType.Camp, enter);
                    Employee employee = enterprise.getEmployeeDirectory().createEmployee("admin");
                    String username = "admin_" + name1;
                    enterprise.getUserAccountDirectory().createUserAccount(username, "admin", employee, new AdminRole());
                    enterprise.getOrganizationDirectory().createOrganization(Organization.OrganizationType.VolunteerCamp);

                    JOptionPane.showMessageDialog(this, "Camp Request Approved. Volunteer can Enroll for the Health Camp now!");
                    healthcampDate.setEnabled(false);
                    cmboEnterprise.setEnabled(false);
                    bttnApprove.setEnabled(false);
                    request.setEventDate(healthcampDate.getDate());
//                    campID.setText("");
//                    fName.setText("");
//                    city.setText("");
//                    noOfPeople.setText("");
//                    percentChild.setText("");
//                    percentElder.setText("");
//                    state.setText("");
//                    street.setText("");
//                    zipCode.setText("");
//                    healthcampDate.setDate(null);

                    request.setStatus("Completed");
                    request.setHospital(cmboEnterprise.getSelectedItem().toString());
                } else {
                    JOptionPane.showMessageDialog(null, "Please enter a Date after 10 days");
                }
            } catch (NullPointerException ex) {
                JOptionPane.showMessageDialog(null, "Please Enter Appropriate Date MM-dd-yyyy");

            }
            // enterpriseList.add(enterprise);
        }

    }//GEN-LAST:event_bttnApproveActionPerformed

    private void txtCampIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCampIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCampIDActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtStreetAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStreetAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStreetAddressActionPerformed

    private void txtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCityActionPerformed

    private void txtStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStateActionPerformed

    private void txtZipCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtZipCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtZipCodeActionPerformed

    private void txtNumberPeopleAffectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumberPeopleAffectedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumberPeopleAffectedActionPerformed

    private void txtAffectedChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAffectedChildrenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAffectedChildrenActionPerformed

    private void txtAddectedEldersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddectedEldersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddectedEldersActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle bttnApprove;
    private rojerusan.RSMaterialButtonRectangle bttnBack;
    private rojerusan.RSComboMetro cmboEnterprise;
    private com.toedter.calendar.JDateChooser healthcampDate;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private rojerusan.RSMetroTextPlaceHolder txtAddectedElders;
    private rojerusan.RSMetroTextPlaceHolder txtAffectedChildren;
    private rojerusan.RSMetroTextPlaceHolder txtCampID;
    private rojerusan.RSMetroTextPlaceHolder txtCity;
    private rojerusan.RSMetroTextPlaceHolder txtName;
    private rojerusan.RSMetroTextPlaceHolder txtNumberPeopleAffected;
    private rojerusan.RSMetroTextPlaceHolder txtState;
    private rojerusan.RSMetroTextPlaceHolder txtStreetAddress;
    private rojerusan.RSMetroTextPlaceHolder txtZipCode;
    // End of variables declaration//GEN-END:variables
}
